{"version":3,"sources":["firebase/config.js","firebase/services.js","components/Login/index.js","components/ChatRoom/Message.js","hooks/useFirestore.js","Context/AuthProvider.js","Context/AppProvider.js","components/ChatRoom/ChatWindow.js","components/ChatRoom/UserInfo.js","components/ChatRoom/RoomList.js","components/ChatRoom/SideBar.js","components/ChatRoom/index.js","components/Modals/AddRoomModal.js","components/Modals/InviteMemberModal.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","addDocument","collection","data","add","createdAt","FieldValue","serverTimestamp","generateKeywords","displayName","name","split","filter","word","length","flagArray","result","stringArray","i","findPermutation","k","push","join","reduce","acc","cur","words","arrName","curName","forEach","letter","createKeywords","Title","Typography","GgProvider","GoogleAuthProvider","fbProvider","FacebookAuthProvider","Login","handleGgLogin","a","signInWithPopup","additionalUserInfo","user","isNewUser","email","photoURL","uid","providerId","keywords","justify","style","height","span","textAlign","level","width","marginBottom","onClick","WrapperStyled","styled","div","formatDate","seconds","formattedDate","formatRelative","Date","charAt","toUpperCase","slice","Message","text","size","src","Text","className","useFirestore","condition","useState","documents","setDocuments","React","useEffect","collectionRef","compareValue","where","fieldName","operator","unsubcribe","onSnapshot","snapshot","docs","map","doc","id","AuthContext","createContext","AuthProvider","children","setUser","history","useHistory","isLoading","setIsLoading","onAuthStateChanged","console","log","Provider","value","AppContext","AppProvider","isAddRoomVisible","setIsAddRoomVisible","selectedRoomId","setSelectedRoomId","isInviteMemberVisible","setIsInviteMemberVisible","useContext","roomsCondition","useMemo","rooms","selectedRoom","find","room","userCondition","members","HeaderStyled","ButtonGroupStyled","ContentStyled","FormStyled","Form","MessageListStyled","ChatWindow","inputValue","setInputValue","handleOnSubmit","roomId","messages","sort","b","description","icon","UserAddOutlined","type","Group","maxCount","member","title","mes","Item","placeholder","bordered","autoComplete","onChange","e","target","onPressEnter","message","showIcon","margin","closable","UserInfo","ghost","signOut","Panel","Collapse","PanelStyled","LinkStyled","Link","RoomList","defaultActiveKey","header","PlusSquareOutlined","SidebarStyled","SideBar","ChatRoom","AddRoomModal","useForm","form","visible","onOk","getFieldValue","resetFields","onCancel","layout","label","TextArea","DebounceSelect","fetchOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","debounceFetcher","debounce","curMembers","then","newOptions","labelInValue","filterOption","onSearch","notFoundContent","opt","Option","fetchUserList","search","limit","get","includes","InviteMemberModal","setValue","update","val","mode","newValue","App","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d390cbf.chunk.js","sourcesContent":["import firebase from \"firebase\";\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDxVFevq_WCPzyCDa8MQWM5Sz_nTTG0-Hs\",\n    authDomain: \"chat-app-c97d1.firebaseapp.com\",\n    projectId: \"chat-app-c97d1\",\n    storageBucket: \"chat-app-c97d1.appspot.com\",\n    messagingSenderId: \"113429527145\",\n    appId: \"1:113429527145:web:d07f048328382781ff00f8\",\n    measurementId: \"G-66YZDW5J3D\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nexport {db, auth};\nexport default firebase;","import firebase, { db } from \"./config\";\n\nexport const addDocument = (collection, data) => {\n    const query = db.collection(collection);\n\n    query.add({\n        ...data,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n};\n\n// Giải thuật tìm kiếm hoán vị dựa trên keywords với firebase\n\n// tao keywords cho displayName, su dung cho search\nexport const generateKeywords = (displayName) => {\n    // liệt kê tất cả các hoán vị vd: [\"Ho\", \"Tan\", \"Loi\"]\n    // => [\"Loi\", \"Ho\", \"Tan\"], [\"Tan\", \"Loi\", \"Ho\"], [\"Ho\", \"Tan\", \"Loi\"],...\n    const name = displayName.split(' ').filter((word) => word);\n  \n    const length = name.length;\n    let flagArray = [];\n    let result = [];\n    let stringArray = [];\n  \n    /**\n     * khoi tao mang flag false\n     * dung de danh dau xem gia tri\n     * tai vi tri nay da duoc su dung\n     * hay chua\n     **/\n    for (let i = 0; i < length; i++) {\n      flagArray[i] = false;\n    }\n  \n    const createKeywords = (name) => {\n      const arrName = [];\n      let curName = '';\n      name.split('').forEach((letter) => {\n        curName += letter;\n        arrName.push(curName);\n      });\n      return arrName;\n    };\n  \n    function findPermutation(k) {\n      for (let i = 0; i < length; i++) {\n        if (!flagArray[i]) {\n          flagArray[i] = true;\n          result[k] = name[i];\n  \n          if (k === length - 1) {\n            stringArray.push(result.join(' '));\n          }\n  \n          findPermutation(k + 1);\n          flagArray[i] = false;\n        }\n      }\n    }\n  \n    findPermutation(0);\n  \n    const keywords = stringArray.reduce((acc, cur) => {\n      const words = createKeywords(cur);\n      return [...acc, ...words];\n    }, []);\n  \n    return keywords;\n  };","import React from 'react';\nimport {Row, Col, Button, Typography} from 'antd';\nimport firebase, {auth} from '../../firebase/config';\nimport { addDocument, generateKeywords } from '../../firebase/services';\n\nconst {Title} = Typography;\nconst GgProvider = new firebase.auth.GoogleAuthProvider();\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\n\nfunction Login() {\n    \n    const handleFbLogin = () => {\n        auth.signInWithPopup(fbProvider);\n    };\n    const handleGgLogin = async () => {\n        const { additionalUserInfo, user } = await auth.signInWithPopup(GgProvider);\n        if(additionalUserInfo?.isNewUser) {\n            addDocument('user', {\n                displayName: user.displayName,\n                email: user.email,\n                photoURL: user.photoURL,\n                uid: user.uid,\n                providerId: additionalUserInfo.providerId,\n                keywords: generateKeywords(user.displayName)\n            });\n        }\n    };\n    \n    return (\n        <div>\n            <Row justify=\"center\" style={{height: 800}}>\n                <Col span={8}>\n                    <Title style={{textAlign: 'center'}} level={3}>Fun Chat</Title>\n                    <Button style={{width: '100%', marginBottom: 5}} onClick={handleGgLogin}>Đăng nhập bằng Google</Button>\n                    <Button style={{width: '100%'}} onClick={handleFbLogin}>Đăng nhập bằng Facebook</Button>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react';\nimport { Avatar, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { formatRelative } from 'date-fns';\n\nconst WrapperStyled = styled.div`\n    margin-bottom: 10px;\n\n    .author {\n        margin-left: 5px;\n        font-weight: bold;\n    }\n\n    .date {terday a\n        margin-left: 10px;\n        font-size: 11px;\n        color: #a7a7a7;\n    }\n\n    .content {\n        margin-left: 30px;\n    }\n`;\n\nfunction formatDate(seconds) {\n    let formattedDate = '';\n    if(seconds) {\n        formattedDate = formatRelative(new Date(seconds * 1000), new Date());\n        formattedDate = formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n    }\n\n    return formattedDate;\n};\n\nfunction Message({text, displayName, createdAt, photoURL}) {\n    return (\n        <WrapperStyled>\n            <div>\n                <Avatar size=\"small\" src={photoURL}>\n                    {photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}\n                </Avatar>\n                <Typography.Text className=\"author\">{displayName}</Typography.Text>\n                <Typography.Text className=\"date\">{formatDate(createdAt?.seconds)}</Typography.Text>\n            </div>\n            <div>\n                <Typography.Text className=\"content\">{text}</Typography.Text>\n            </div>\n        </WrapperStyled>\n    )\n}\n\nexport default Message\n","import React, { useState } from \"react\";\nimport { db } from \"../firebase/config\";\n\nconst useFirestore = (collection, condition) => {\n    const [documents, setDocuments] = useState([]);\n    React.useEffect(() => {\n        let collectionRef = db.collection(collection); \n\n        if(condition) {\n            if(!condition.compareValue || !condition.compareValue.length) {\n                return;\n            }\n            // console.log(condition.fieldName, \n            //     condition.operator, \n            //     condition.compareValue);\n\n            collectionRef = collectionRef.where(\n                condition.fieldName, \n                condition.operator, \n                condition.compareValue\n            );\n        }\n\n        const unsubcribe = collectionRef.onSnapshot((snapshot) => {\n            const documents = snapshot.docs.map((doc) => ({\n                ...doc.data(),\n                id: doc.id,\n            }));\n            setDocuments(documents);\n        });\n\n        return () => {\n            unsubcribe();\n        }\n        \n    }, [collection, condition]);\n    return documents;\n};\n\nexport default useFirestore","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {auth} from '../firebase/config';\nimport { Spin } from 'antd';\n\nexport const AuthContext = React.createContext();\n\nexport default function AuthProvider({children}) {\n    const [user, setUser] = useState({});\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(true);\n\n    React.useEffect(() => {\n        const unsubcribe = auth.onAuthStateChanged((user) => {\n            console.log({user});\n            if(user){\n                const { displayName, email, uid, photoURL } = user;\n                setUser({\n                    displayName, email, uid, photoURL\n                });\n                setIsLoading(false);\n                history.push('/');\n            } else{\n                setIsLoading(false);\n                history.push('/login');\n            }\n            \n        });\n\n        // clean function\n        return () => {\n            unsubcribe();\n        }\n    }, [history]);\n    \n    return (\n        <AuthContext.Provider value={{user}}>\n            {isLoading ? <Spin /> : children}\n        </AuthContext.Provider>\n    )\n}\n\n","import React, { useState } from 'react'\nimport useFirestore from '../hooks/useFirestore';\nimport { AuthContext } from './AuthProvider';\n\nexport const AppContext = React.createContext();\n\nfunction AppProvider({ children }) {\n    const [isAddRoomVisible, setIsAddRoomVisible] = useState(false);\n    const [selectedRoomId, setSelectedRoomId] = useState('');\n    const [isInviteMemberVisible, setIsInviteMemberVisible] = useState(false);\n\n    const { user: { uid }, } = React.useContext(AuthContext);\n    /*  room constructor\n        {\n            name: 'room name',\n            description: 'mo ta',\n            members: [uid1, uid2, ...],\n            createdAt: 14/7/2021\n        }\n    */\n    const roomsCondition = React.useMemo(() => {\n        return {\n            fieldName: \"members\",\n            operator: \"array-contains\",\n            compareValue: uid\n        };\n    }, [uid]);\n\n    const rooms = useFirestore(\"rooms\", roomsCondition);\n\n    const selectedRoom = React.useMemo(\n        () => rooms.find((room) => room.id === selectedRoomId) || {}, \n        [rooms, selectedRoomId]\n    );\n\n    const userCondition = React.useMemo(() => {\n        return {\n            fieldName: \"uid\",\n            operator: \"in\",\n            compareValue: selectedRoom.members,\n        };\n    }, [selectedRoom.members]);\n\n    const members = useFirestore('user', userCondition);\n    return (\n        <AppContext.Provider value={{ \n            rooms, \n            members, \n            selectedRoom, \n            isAddRoomVisible, \n            setIsAddRoomVisible, \n            selectedRoomId, \n            setSelectedRoomId,\n            isInviteMemberVisible, \n            setIsInviteMemberVisible\n        }}>\n            {children}\n        </AppContext.Provider>\n    );\n}\n\nexport default AppProvider\n","import { Button, Tooltip, Avatar, Input, Form, Alert } from 'antd';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { UserAddOutlined } from '@ant-design/icons';\nimport Message from './Message';\nimport { AppContext } from '../../Context/AppProvider';\nimport { addDocument } from '../../firebase/services';\nimport { AuthContext } from '../../Context/AuthProvider';\nimport useFirestore from '../../hooks/useFirestore';\n\nconst HeaderStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    height: 56px;\n    padding: 0 16px;\n    align-items: center;\n    border-bottom: 1px solid rgb(230, 230, 230);\n\n    .header {\n        &-info {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        }\n\n        &-title {\n            margin: 0;\n            font-weight: bold;\n        }\n\n        &-description {\n            font-size: 12px;\n        }\n    }\n`;\n\nconst ButtonGroupStyled = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst WrapperStyled = styled.div`\n    height: 100vh;\n`;\n\nconst ContentStyled = styled.div`\n    height: calc(100% - 56px);\n    display: flex;\n    flex-direction: column;\n    padding: 11px;\n    justify-content: flex-end;\n    overflow-y: auto;\n`;\n\nconst FormStyled = styled(Form)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2px 2px 2px 0;\n    border: 1px solid rgb(230, 230, 230);\n    border-radius: 2px;\n\n    .ant-form-item {\n        flex: 1;\n        margin-bottom: 0;\n    }\n`;\n\nconst MessageListStyled = styled.div``;\n\nfunction ChatWindow() {\n    const { selectedRoom, members, setIsInviteMemberVisible } = React.useContext(AppContext);\n    const { user: { uid, photoURL, displayName } } = React.useContext(AuthContext);\n    const [inputValue, setInputValue] = useState('');\n    // const [form] = Form.useForm();\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleOnSubmit = () => {\n        addDocument('messages', {\n            text: inputValue,\n            uid: uid,\n            photoURL: photoURL,\n            roomId: selectedRoom.id,\n            displayName: displayName,\n        });\n\n        setInputValue('');\n    };\n\n    const condition = React.useMemo(() => ({\n        fieldName: 'roomId',\n        operator: '==',\n        compareValue: selectedRoom.id\n    }), [selectedRoom.id]);\n\n    const messages = useFirestore('messages', condition);\n    \n    messages.sort((a,b) => {\n        return a.createdAt - b.createdAt;\n    });\n\n    return (\n        <WrapperStyled>\n            {\n                selectedRoom.id ? (\n                    <>\n                        <HeaderStyled>\n                            <div className=\"header-info\">\n                                <p className=\"header-title\">{selectedRoom.name}</p>\n                                <span className=\"header-description\">{selectedRoom.description}</span>\n                            </div>\n                            <ButtonGroupStyled>\n                                <Button icon={<UserAddOutlined />} type=\"text\" onClick={() => setIsInviteMemberVisible(true)}>Mời</Button>\n                                <Avatar.Group size=\"small\" maxCount={2}>\n                                    {\n                                        members.map(member => <Tooltip title={member.displayName} key={member.id}>\n                                            <Avatar src={member.photoURL}>{member.photoURL ? '' : member.displayName?.charAt(0)?.toUpperCase()}</Avatar>\n                                        </Tooltip>)\n                                    }\n                                    \n                                </Avatar.Group>\n                            </ButtonGroupStyled>\n                        </HeaderStyled>\n                        <ContentStyled>\n                            <MessageListStyled>\n                                {\n                                    messages.map(mes => <Message key={mes.id}\n                                        text={mes.text} \n                                        photoURL={mes.photoURL} \n                                        displayName={mes.displayName} \n                                        createdAt={mes.createdAt} \n                                    />)\n                                }\n                                \n                            </MessageListStyled>\n                            <FormStyled >\n                                <Form.Item >\n                                    <Input \n                                        placeholder=\"Nhập tin nhắn...\" \n                                        bordered={false} \n                                        autoComplete='off'\n                                        onChange={handleInputChange}\n                                        onPressEnter={handleOnSubmit}\n                                        value={inputValue}\n                                    />\n                                </Form.Item>\n                                <Button type=\"primary\" onClick={handleOnSubmit}>Gửi</Button>\n                            </FormStyled>\n                        </ContentStyled>\n                    </> \n                ) : <Alert message=\"Hãy chọn phòng\" type=\"info\" showIcon style={{margin: 5}} closable />\n            }\n            \n        </WrapperStyled>\n    );\n}\n\nexport default ChatWindow\n","import { Button, Typography } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { auth } from '../../firebase/config';\nimport { AuthContext } from '../../Context/AuthProvider';\n\nconst WrapperStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 12px 16px;\n    border-bottom: 1px solid rgba(82, 38, 83);\n\n    .username {\n        color: white;\n        margin-left: 5px;\n    }\n`;\n\nfunction UserInfo() {\n    \n    const { user: {\n        displayName,\n        photoURL\n    } } = React.useContext(AuthContext);\n\n    return (\n        <WrapperStyled>\n            <div>\n                <Avatar src={photoURL}>{photoURL ? '' : displayName?.charAt(0)?.toUpperCase()}</Avatar>\n                <Typography.Text className=\"username\">{displayName}</Typography.Text>\n            </div>\n            <Button ghost onClick={() => auth.signOut()}>Đăng xuất</Button>\n        </WrapperStyled>\n    )\n}\n\nexport default UserInfo\n","import React from 'react'\nimport { Button, Collapse, Typography } from 'antd';\nimport styled from 'styled-components';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport { AppContext } from '../../Context/AppProvider';\n\nconst { Panel } = Collapse;\n\nconst PanelStyled = styled(Panel)`\n    &&& {\n        .ant-collapse-header, p {\n            color: white;\n        }\n\n        .ant-collapse-content-box {\n            padding: 0 40px;\n        }\n\n        .add-room {\n            color: white;\n            padding: 0;\n        }\n    }\n`;\n\nconst LinkStyled = styled(Typography.Link)`\n    display: block;\n    margin-bottom: 5px;\n    color: white;\n`;\n\nfunction RoomList() {\n    const { rooms, setIsAddRoomVisible, setSelectedRoomId } = React.useContext(AppContext);\n\n    const handleAddRoom = () => {\n        setIsAddRoomVisible(true);\n    };\n\n    return (\n        <Collapse ghost defaultActiveKey={['1']}>\n            <PanelStyled header=\"Danh sách các phòng\" key='1'>\n                {\n                    rooms.map((room) => (\n                        <LinkStyled key={room.id} onClick={() => setSelectedRoomId(room.id)}>{room.name}</LinkStyled>\n                    ))\n                }\n                \n                <Button type=\"text\" icon={<PlusSquareOutlined />} className=\"add-room\" onClick={handleAddRoom}>Thêm phòng</Button>\n            </PanelStyled>\n        </Collapse>\n    )\n}\n\nexport default RoomList\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport UserInfo from './UserInfo';\nimport RoomList from './RoomList';\nimport styled from 'styled-components';\n\nconst SidebarStyled = styled.div`\n    background: #3f0e40;\n    color: white;\n    height: 100vh;\n`;\n\nfunction SideBar() {\n    return (\n        <SidebarStyled>\n            <Row>\n                <Col span={24}><UserInfo /></Col>\n                <Col span={24}><RoomList /></Col>\n            </Row>\n        </SidebarStyled>\n    )\n}\n\nexport default SideBar\n","import { Row, Col } from 'antd'\nimport React from 'react'\nimport ChatWindow from './ChatWindow'\nimport SideBar from './SideBar'\n\nfunction ChatRoom() {\n    return (\n        <div>\n            <Row>\n                <Col span={6}><SideBar /></Col>\n                <Col span={18}><ChatWindow /></Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default ChatRoom\n","import React, { useContext } from 'react';\nimport { Form, Modal, Input } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { addDocument } from '../../firebase/services';\nimport { AuthContext } from '../../Context/AuthProvider';\n\nfunction AddRoomModal() {\n    const [form] = Form.useForm();\n    const { isAddRoomVisible, setIsAddRoomVisible } = useContext(AppContext);\n    const { user: { uid } } = useContext(AuthContext);\n    const handleOk = () => {\n        addDocument('rooms', {...form.getFieldValue(), members: [uid] });\n        setIsAddRoomVisible(false);\n        // reset form value\n        form.resetFields();\n    };\n    const handleCancel = () => {\n        setIsAddRoomVisible(false);\n        // reset form value\n        form.resetFields();\n    };\n    return (\n        <div>\n            <Modal\n                title=\"Tạo phòng\" \n                visible={isAddRoomVisible} \n                onOk={handleOk} \n                onCancel={handleCancel}\n            >\n                <Form form={form} layout=\"vertical\">\n                    <Form.Item label=\"Tên phòng\" name=\"name\">\n                        <Input placeholder=\"Nhập tên phòng\"/>\n                    </Form.Item>\n                    <Form.Item label=\"Mô tả\" name=\"description\">\n                        <Input.TextArea placeholder=\"Nhập mô tả\"/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default AddRoomModal\n","import React, { useContext, useState } from 'react';\nimport { Form, Modal, Select, Spin, Avatar } from 'antd';\nimport { AppContext } from '../../Context/AppProvider';\nimport { debounce } from 'lodash';\nimport { db } from '../../firebase/config';\n\nfunction DebounceSelect({fetchOptions, debounceTimeout = 300, ...props}) {\n    const [fetching, setFetching] = useState(false);\n    const [options, setOptions] = useState([]);\n\n    const debounceFetcher = React.useMemo(() => {\n        const loadOptions = (value) => {\n            setOptions([]);\n            setFetching(true);\n\n            fetchOptions(value, props.curMembers).then(newOptions => {\n                setOptions(newOptions);\n                setFetching(false);\n            })\n        };\n\n        return debounce(loadOptions, debounceTimeout);\n    }, [debounceTimeout, fetchOptions, props.curMembers]);\n\n    return (\n        <Select \n            labelInValue\n            filterOption={false}\n            onSearch={debounceFetcher}\n            notFoundContent={ fetching ? <Spin size=\"small\" /> : null}\n            {...props}\n        >\n            {\n                options.map(opt => (\n                    <Select.Option key={opt.value} value={opt.value} title={opt.label}>\n                        <Avatar size=\"small\" src={opt.photoURL}>\n                            {opt.photoURL ? '' : opt.label?.charAt(0)?.toUpperCase()}\n                        </Avatar>\n                        {`${opt.label}`}\n                    </Select.Option>\n                ))\n            }\n        </Select>\n    )\n};\nasync function fetchUserList(search, curMembers) {\n    return db\n        .collection('user')\n        .where('keywords', 'array-contains', search)\n        // .orderBy('displayName')\n        .limit(20)\n        .get()\n        .then(snapshot => {\n            return snapshot.docs.map(doc => ({\n                label: doc.data().displayName,\n                value: doc.data().uid,\n                photoURL: doc.data().photoURL\n            })).filter(opt => !curMembers.includes(opt.value));\n        });\n};\n\nfunction InviteMemberModal() {\n    const [form] = Form.useForm();\n    const { isInviteMemberVisible, setIsInviteMemberVisible, selectedRoomId, selectedRoom } = useContext(AppContext);\n    const [value, setValue] = useState([]);\n\n    const handleOk = () => {\n        // reset form value\n        form.resetFields();\n        setIsInviteMemberVisible(false);\n        // update members in current room\n        const roomRef = db.collection('rooms').doc(selectedRoomId);\n        roomRef.update({\n            members: [...selectedRoom.members, ...value.map(val => val.value)],\n        });\n\n    };\n    const handleCancel = () => {\n        setIsInviteMemberVisible(false);\n        // reset form value\n        form.resetFields();\n    };\n    \n    return (\n        <div>\n            <Modal\n                title=\"Mời thêm thành viên\" \n                visible={isInviteMemberVisible} \n                onOk={handleOk} \n                onCancel={handleCancel}\n            >\n                <Form form={form} layout=\"vertical\">\n                    <DebounceSelect \n                        mode=\"multiple\"\n                        label=\"Tên các thành viên\"\n                        value={value}\n                        placeholder=\"Nhập tên các thành viên\"\n                        fetchOptions={fetchUserList}\n                        onChange={newValue => setValue(newValue)}\n                        style={{width: '100%'}}\n                        curMembers={selectedRoom.members}\n                    />\n                </Form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default InviteMemberModal\n","\nimport './App.css';\nimport Login from './components/Login';\nimport {Route, Switch, BrowserRouter} from 'react-router-dom';\nimport ChatRoom from './components/ChatRoom';\nimport AuthProvider from './Context/AuthProvider';\nimport AppProvider from './Context/AppProvider';\nimport AddRoomModal from './components/Modals/AddRoomModal';\nimport InviteMemberModal from './components/Modals/InviteMemberModal';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n        <AppProvider>\n          <Switch>\n            <Route component={Login} path=\"/login\" />\n            <Route component={ChatRoom} path=\"/\" />\n          </Switch>\n          <AddRoomModal />\n          <InviteMemberModal />\n        </AppProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}